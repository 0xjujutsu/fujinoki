name: autofix.ci

on:
  pull_request:
    types: [opened, synchronize]

env:
  NODE_LTS_VERSION: 20
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: kijv

permissions:
  contents: read

jobs:
  optimize_ci:
    name: Optimize CI
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check_skip.outputs.skip }}
    steps:
      - name: Optimize CI
        id: check_skip
        uses: withgraphite/graphite-ci-action@main
        with:
          graphite_token: ${{ secrets.GRAPHITE_TOKEN }}

  lockfiles:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: optimize_ci
    if: needs.optimize_ci.outputs.skip == 'false'
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - uses: actions/checkout@v4

      - name: Install Rust
        uses: ./.github/actions/setup-rust

      - run: corepack enable && pnpm --version

      - id: get-store-path
        run: echo STORE_PATH=$(pnpm store path) >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        timeout-minutes: 5
        id: cache-pnpm-store
        with:
          path: ${{ steps.get-store-path.outputs.STORE_PATH }}
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-
            pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install

      - run: cargo generate-lockfile

      - uses: autofix-ci/action@dd55f44df8f7cdb7a6bf74c78677eb8acd40cd0a
