name: Code quality

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  actions: write
  contents: read
  pull-requests: read

jobs:
  determine_jobs:
    name: Determine jobs to run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: CI related changes
        id: ci
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            .github/actions/**
            .github/workflows/code-quality.yml

      - name: Rust related changes
        id: rust
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            pnpm-lock.yaml
            package.json
            Cargo.**
            crates/**
            .cargo/**
            rust-toolchain.toml
            !**.md
            !**.mdx

      - name: Formatting related changes
        id: format
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/*.{yml,yaml,md,mdx,js,jsx,ts,tsx,json,toml,css}

    outputs:
      rust: ${{ steps.ci.outputs.diff != '' || steps.rust.outputs.diff != '' }}
      format: ${{ steps.ci.outputs.diff != '' || steps.format.outputs.diff != '' }}

  rust_lint:
    needs: [determine_jobs]
    if: needs.determine_jobs.outputs.rust == 'true'
    name: Rust lints
    strategy:
      matrix:
          os:
            - macos-latest
            - ubuntu-latest
            - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run cargo fmt check
        run: |
          cargo fmt --check

      - name: Check Cargo.toml formatting (taplo)
        run: npx @taplo/cli@0.5.2 format --check

      - name: Check licenses
        uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check licenses

  format_lint:
    name: Formatting
    runs-on: ubuntu-latest
    needs: determine_jobs
    if: needs.determine_jobs.outputs.format == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          check-latest: true

      - name: Lint
        run: |
          corepack enable
          pnpm install --no-optional
          pnpm run lint:biome

  cleanup:
    name: Cleanup
    needs:
      - rust_lint
      - format_lint
    if: always()
    uses: ./.github/workflows/pr-clean-caches.yaml
    secrets: inherit
